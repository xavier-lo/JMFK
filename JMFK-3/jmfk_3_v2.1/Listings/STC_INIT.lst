C51 COMPILER V9.56.0.0   STC_INIT                                                          08/10/2018 16:59:16 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE STC_INIT
OBJECT MODULE PLACED IN .\Objects\STC_INIT.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE STC_INIT.C OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\
                    -STC_INIT.lst) TABS(2) OBJECT(.\Objects\STC_INIT.obj)

line level    source

   1          ////**********************************////
   2          //=================//
   3          //本程序适用于
   4          //用于JMFK-3 刷卡器
   5          //MCU：stc89c55rd+
   6          //晶振：11.0592MHz 震荡周期1.085us
   7          //文件：STC_INIT.C
   8          //================//
   9          ////**********************************////
  10          #include<STC_INIT.H>
  11          #include<math.h>
  12          //*************************//
  13          //name:init_time0
  14          //discription:定时器0中断初始化
  15          //in:  TIME  MOD   VALUE   定时器号 工作模式 定时值
  16          //out:
  17          void init_time(char TIME,TIM_MOD_Type MOD,TIM_VALUE_Type VALUE)
  18          {
  19   1      /*****
  20   1      //定时器0
  21   1      *****/    
  22   1        if((TIME&0x01)==TIME_0)
  23   1        {
  24   2           if(MOD==WIDE13)
  25   2           {  
  26   3              TMOD=(TMOD&0xf0)|0x00; 
  27   3              TH0=(65535-VALUE)/256;
  28   3              TL0=(65535-VALUE)%256;
  29   3           }
  30   2           if(MOD==WIDE16)
  31   2           {
  32   3              TMOD=(TMOD&0xf0)|0x01;
  33   3              TH0=(65535-VALUE)/256;
  34   3              TL0=(65535-VALUE)%256;       
  35   3           }
  36   2           if(MOD==WIDE8)
  37   2           {
  38   3              TMOD=(TMOD&0xf0)|0x02;
  39   3              TH0=VALUE;
  40   3              TL0=VALUE;       
  41   3           }
  42   2           if(MOD==WIDE8D)
  43   2           {
  44   3              TMOD=(TMOD&0xf0)|0x03;
  45   3              TH0=VALUE;
  46   3              TL0=VALUE;         
  47   3           }
  48   2           TR0=1;
  49   2           ET0=1;
  50   2        }
  51   1      /*****
  52   1      //定时器1
  53   1      *****/    
  54   1        if((TIME&0x02)==TIME_1)
C51 COMPILER V9.56.0.0   STC_INIT                                                          08/10/2018 16:59:16 PAGE 2   

  55   1        {
  56   2           if(MOD==WIDE13)
  57   2           {
  58   3              TMOD=(TMOD&0x0f)|0x00; 
  59   3               TH1=(65535-VALUE)/256;
  60   3               TL1=(65535-VALUE)%256;      
  61   3           }
  62   2           if(MOD==WIDE16)
  63   2           {
  64   3              TMOD=(TMOD&0x0f)|0x10;
  65   3               TH1=(65535-VALUE)/256;
  66   3               TL1=(65535-VALUE)%256;            
  67   3           }
  68   2           if(MOD==WIDE8)
  69   2           {
  70   3              TMOD=(TMOD&0x0f)|0x20;
  71   3               TH1=VALUE;
  72   3               TL1=VALUE;            
  73   3           }
  74   2           if(MOD==WIDE8D)
  75   2           {
  76   3              TMOD=(TMOD&0x0f)|0x30;
  77   3               TH1=VALUE;
  78   3               TL1=VALUE;        
  79   3           }
  80   2           TR1=1;
  81   2           ET1=1;
  82   2        }
  83   1      }
  84          //**//
  85          //*************************//
  86          //name:init_uart
  87          //discription:串行口中断初始化
  88          //in:  S_UART  MOD  S_BTR  S_MOD  VALUE  串口号 工作模式 选择波特率发生器 是否加倍 波特率值
  89          //out:
  90          void init_uart(char S_UART,UART_MOD_Type MOD,UART_MOD_Type S_BTR,UART_MOD_Type S_MOD,TIM_VALUE_Type VALUE)
  91          {
  92   1      /*****
  93   1      //串口1
  94   1      *****/  
  95   1        if((S_UART&0x01)==UART_1)
  96   1        {
  97   2          switch(MOD)
  98   2          {
  99   3            case MOD0:
 100   3              SM0=0;
 101   3              SM1=0;
 102   3              break;
 103   3            case MOD1:
 104   3              SM0=0;
 105   3              SM1=1;
 106   3              break;
 107   3            case MOD2:
 108   3              SM0=1;
 109   3              SM1=0;
 110   3              break;
 111   3            case MOD3:
 112   3              SM0=1;
 113   3              SM1=1;
 114   3              break;
 115   3            default:
 116   3              break;    
C51 COMPILER V9.56.0.0   STC_INIT                                                          08/10/2018 16:59:16 PAGE 3   

 117   3          }
 118   2          if(S_BTR==BTR_BTR)
 119   2          {
 120   3            if(S_MOD==ISSMOD)
 121   3            {
 122   4              PCON|=0x80;
 123   4              BRT=VALUE;
 124   4            }else if(S_MOD==NOSMOD)
 125   3            {
 126   4              PCON&=0x7f;
 127   4              BRT=VALUE;      
 128   4            }
 129   3            AUXR&=0XE0;
 130   3            AUXR|=0X11; 
 131   3          }
 132   2          else if(S_BTR==BTR_TM1)
 133   2          {
 134   3            TMOD&=0X0F;
 135   3            TMOD|=0X20;
 136   3            AUXR&=0Xfe;
 137   3            if(S_MOD==ISSMOD)
 138   3            {
 139   4              PCON|=0x80;
 140   4              TH1=VALUE;
 141   4              TL1=VALUE;   
 142   4            }else if(S_MOD==NOSMOD)
 143   3            {
 144   4              PCON&=0x7f;
 145   4              TH1=VALUE;
 146   4              TL1=VALUE;              
 147   4            }
 148   3            TR1=1;    
 149   3          }
 150   2          ES=1;
 151   2        
 152   2        }
 153   1      /*****
 154   1      //串口2
 155   1      *****/  
 156   1        if((S_UART&0x02)==UART_2)
 157   1        {
 158   2          switch(MOD)
 159   2          {
 160   3            case MOD0:
 161   3              S2CON&=0X3F;
 162   3              break;
 163   3            case MOD1:
 164   3              S2CON&=0X3F;
 165   3              S2CON|=0X40;
 166   3              break;
 167   3            case MOD2:
 168   3              S2CON&=0X3F;
 169   3              S2CON|=0X80;
 170   3              break;
 171   3            case MOD3:
 172   3              S2CON&=0X3F;
 173   3              S2CON|=0XC0;
 174   3              break;
 175   3            default:
 176   3              break;    
 177   3          }
 178   2          if(S_BTR==BTR_BTR)
C51 COMPILER V9.56.0.0   STC_INIT                                                          08/10/2018 16:59:16 PAGE 4   

 179   2          {
 180   3            if(S_MOD==ISSMOD)
 181   3            {
 182   4              AUXR&=0XE3;
 183   4              AUXR|=0x18;
 184   4              BRT=VALUE;
 185   4            }else if(S_MOD==NOSMOD)
 186   3            {
 187   4              AUXR&=0XE3;
 188   4              AUXR|=0x10;
 189   4              BRT=VALUE;    
 190   4            }
 191   3          }
 192   2          IE2|=0X01;  
 193   2        }  
 194   1      }
 195          //**//
 196          
 197          //*************************//
 198          //name:init_gpio_config
 199          //discription:IO口模式配置
 200          //in:  GPIO_NAME_Type GPIO_MOD_Type GPIO_PIN_Type IO口 配置模式 引脚选择
 201          //out:
 202          void init_gpio_config(char io,GPIO_MOD_Type io_mod,char io_pin)
 203          {
 204   1      /*****
 205   1      //P0
 206   1      *****/  
 207   1          if((io&0x01)==GPIO_0)
 208   1          {
 209   2            if(io_mod==GPIO_STANDERD)
 210   2            {
 211   3                P0M0&=(~io_pin);
 212   3                P0M1&=(~io_pin);
 213   3            }else if(io_mod==GPIO_PUSHPULL)
 214   2            {
 215   3                P0M0|=io_pin;
 216   3                P0M1&=(~io_pin);        
 217   3            }else if(io_mod==GPIO_HIGHIMPEDENCE)
 218   2            {
 219   3                P0M0&=(~io_pin);
 220   3                P0M1|=io_pin;       
 221   3            }else if(io_mod==GPIO_OPENDRAIN)
 222   2            {
 223   3                P0M0|=io_pin;
 224   3                P0M1|=io_pin;       
 225   3            }
 226   2          }
 227   1      /*****
 228   1      //P1
 229   1      *****/    
 230   1          if((io&0x02)==GPIO_1)
 231   1          {
 232   2            if(io_mod==GPIO_STANDERD)
 233   2            {
 234   3                P1M0&=(~io_pin);
 235   3                P1M1&=(~io_pin);
 236   3            }else if(io_mod==GPIO_PUSHPULL)
 237   2            {
 238   3                P1M0|=io_pin;
 239   3                P1M1&=(~io_pin);        
 240   3            }else if(io_mod==GPIO_HIGHIMPEDENCE)
C51 COMPILER V9.56.0.0   STC_INIT                                                          08/10/2018 16:59:16 PAGE 5   

 241   2            {
 242   3                P1M0&=(~io_pin);
 243   3                P1M1|=io_pin;       
 244   3            }else if(io_mod==GPIO_OPENDRAIN)
 245   2            {
 246   3                P1M0|=io_pin;
 247   3                P1M1|=io_pin;       
 248   3            }     
 249   2          }
 250   1      /*****
 251   1      //P2
 252   1      *****/    
 253   1          if((io&0x04)==GPIO_2)
 254   1          {
 255   2            if(io_mod==GPIO_STANDERD)
 256   2            {
 257   3                P2M0&=(~io_pin);
 258   3                P2M1&=(~io_pin);
 259   3            }else if(io_mod==GPIO_PUSHPULL)
 260   2            {
 261   3                P2M0|=io_pin;
 262   3                P2M1&=(~io_pin);        
 263   3            }else if(io_mod==GPIO_HIGHIMPEDENCE)
 264   2            {
 265   3                P2M0&=(~io_pin);
 266   3                P2M1|=io_pin;       
 267   3            }else if(io_mod==GPIO_OPENDRAIN)
 268   2            {
 269   3                P2M0|=io_pin;
 270   3                P2M1|=io_pin;       
 271   3            }     
 272   2          }
 273   1      /*****
 274   1      //P3
 275   1      *****/    
 276   1          if((io&0x08)==GPIO_3)
 277   1          {
 278   2            if(io_mod==GPIO_STANDERD)
 279   2            {
 280   3                P3M0&=(~io_pin);
 281   3                P3M1&=(~io_pin);
 282   3            }else if(io_mod==GPIO_PUSHPULL)
 283   2            {
 284   3                P3M0|=io_pin;
 285   3                P3M1&=(~io_pin);        
 286   3            }else if(io_mod==GPIO_HIGHIMPEDENCE)
 287   2            {
 288   3                P3M0&=(~io_pin);
 289   3                P3M1|=io_pin;       
 290   3            }else if(io_mod==GPIO_OPENDRAIN)
 291   2            {
 292   3                P3M0|=io_pin;
 293   3                P3M1|=io_pin;       
 294   3            }     
 295   2          }
 296   1      /*****
 297   1      //P4
 298   1      *****/    
 299   1          if((io&0x10)==GPIO_4)
 300   1          {
 301   2            if(io_mod==GPIO_STANDERD)
 302   2            {
C51 COMPILER V9.56.0.0   STC_INIT                                                          08/10/2018 16:59:16 PAGE 6   

 303   3                P4M0&=(~io_pin);
 304   3                P4M1&=(~io_pin);
 305   3            }else if(io_mod==GPIO_PUSHPULL)
 306   2            {
 307   3                P4M0|=io_pin;
 308   3                P4M1&=(~io_pin);        
 309   3            }else if(io_mod==GPIO_HIGHIMPEDENCE)
 310   2            {
 311   3                P4M0&=(~io_pin);
 312   3                P4M1|=io_pin;       
 313   3            }else if(io_mod==GPIO_OPENDRAIN)
 314   2            {
 315   3                P4M0|=io_pin;
 316   3                P4M1|=io_pin;       
 317   3            }     
 318   2          }
 319   1      }
 320          //**//


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    900    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
