C51 COMPILER V9.56.0.0   OPERATE_CARD                                                      08/08/2018 14:56:20 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE OPERATE_CARD
OBJECT MODULE PLACED IN .\Objects\operate_card.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE operate_card.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listi
                    -ngs\operate_card.lst) TABS(2) OBJECT(.\Objects\operate_card.obj)

line level    source

   1          ////**********************************////
   2          //=================//
   3          //本程序适用于
   4          //用于JMFK-3 刷卡器
   5          //MCU：stc89c55rd+
   6          //晶振：11.0592MHz 震荡周期1.085us
   7          //文件：operate_card.C
   8          //此文件使用单片机外设串口1
   9          //================//
  10          #include<operate_card.h>
  11          
  12          sbit BEEP = P3^7;//蜂鸣器
  13          
  14          
  15          /**********************************/
  16          /*name:make_verr                  */
  17          /*discription:产生校验            */
  18          /*var in:da0 需要生成的数据列     */
  19          /*result out: da0 生成后的数据列  */
  20          /**********************************/
  21          void make_verr(unsigned char *da0)
  22          {
  23   1        unsigned char i = 0, verr = 0;
  24   1        verr = da0[2];
  25   1        i = 3;
  26   1        while(i <= da0[2]+1)
  27   1        {
  28   2          verr ^= da0[i];
  29   2          i++;
  30   2        }
  31   1        da0[i] = verr;
  32   1      }
  33          
  34          /********************************/
  35          /*name: verrify                 */
  36          /*discription:校验接收数据      */
  37          /*var in:da0 需要校验的数据     */
  38          /*result out:bool 状态          */
  39          /********************************/
  40          bit verrify(unsigned char *da0)
  41          {
  42   1        bit states = 0;
  43   1        unsigned char ver_da = 0, i = 0;
  44   1        if(da0[0] == 0xaa)
  45   1        {
  46   2          if(da0[1] == 0x55)
  47   2          {     
  48   3            i = 3;
  49   3            ver_da = da0[2];
  50   3            while(i < da0[2]+3)
  51   3            {
  52   4              ver_da ^= da0[i];//异或校验数据
  53   4              i++;
  54   4            }
C51 COMPILER V9.56.0.0   OPERATE_CARD                                                      08/08/2018 14:56:20 PAGE 2   

  55   3            if(ver_da == 0)//结果为0校验成功
  56   3              states = 1;
  57   3          }   
  58   2        }
  59   1        return states;
  60   1      }
  61          
  62          
  63          /**********************************************/
  64          /*name:seek_card                              */
  65          /*discription:寻卡                            */
  66          /*var in:                                     */
  67          /*result out:recive_da 返回数据 传入必须9字节 */
  68          /**********************************************/
  69          char seek_card(unsigned char *recive_da)
  70          {
  71   1        char state  = 0;
  72   1        unsigned char i = 0;
  73   1        unsigned int recive_count = 0;
  74   1        /*
  75   1        发送寻卡数据到卡头
  76   1        6个字节
  77   1        */
  78   1      
  79   1        recive_da[0]=0xaa;
  80   1        recive_da[1]=0x55;
  81   1        recive_da[2]=0x03;
  82   1        recive_da[3]=0x20;
  83   1        recive_da[4]=0x00;  
  84   1        
  85   1        make_verr(recive_da);//生成校验字
  86   1        i = 0;
  87   1        while(i < 6)//发送
  88   1        {
  89   2          TI = 0;
  90   2          SBUF = recive_da[i];
  91   2          i++;
  92   2          while(!TI); 
  93   2        }
  94   1        RI = 0;
  95   1        REN = 1;
  96   1        i = 0;  
  97   1        
  98   1        while(i < 9)//接收数据最多接收9个字节
  99   1        { 
 100   2          recive_count  = 0;      
 101   2          while(!RI)
 102   2          {
 103   3            recive_count++;
 104   3            if(recive_count>=2000)
 105   3            {
 106   4              REN = 0;
 107   4              return state;//超时退出
 108   4            }
 109   3          }
 110   2          recive_da[i] = SBUF;
 111   2          RI  = 0;    
 112   2          i++;    
 113   2        }
 114   1        
 115   1        if((verrify(recive_da) == 1)&&(recive_da[2] == 0x06))//校验接收数据
 116   1        {
C51 COMPILER V9.56.0.0   OPERATE_CARD                                                      08/08/2018 14:56:20 PAGE 3   

 117   2            state = 1;//置位成功状态
 118   2        }
 119   1        REN = 0;
 120   1        return state;
 121   1      }
 122          
 123          /******************************************/
 124          /*name: write_card                        */
 125          /*discription:写数据到块使用卡头密码      */
 126          /*var in:block 块号                       */
 127          /*var in:da 需要写的数据16字节传入25字节  */
 128          /*result out:state 写卡状态               */
 129          /******************************************/
 130          bit write_card(unsigned char block,unsigned char *da)
 131          {
 132   1        unsigned char i = 0, seek_data[9];
 133   1        unsigned int recive_count = 0 ;
 134   1        bit state = 0 ;
 135   1      
 136   1        /*寻卡*/
 137   1        if(seek_card(seek_data) ==  0)
 138   1        {
 139   2          return state;//无卡退出
 140   2        }
 141   1        
 142   1        /*
 143   1        填充数据到发送区
 144   1        */
 145   1        da[0] = 0xaa;
 146   1        da[1] = 0x55;
 147   1        da[2] = 0x16;
 148   1        da[3] = 0x22;
 149   1        da[4] = 0x02;
 150   1        da[5] = block;
 151   1        da[6] = 0x80;
 152   1        da[7] = 0x00;
 153   1      
 154   1        make_verr(da);//生成校验
 155   1        
 156   1        /* 发送 */
 157   1        i = 0;
 158   1        while(i < 25)
 159   1        {
 160   2          TI = 0;
 161   2          SBUF = da[i];
 162   2          i++;
 163   2          while(!TI); 
 164   2        } 
 165   1        /*
 166   1        接收返回状态
 167   1        */
 168   1        RI = 0;
 169   1        i = 0;
 170   1        REN = 1;
 171   1        while(!RI);
 172   1        da[i] = SBUF;
 173   1        while(i < 5)//接收数据最多接收5个字节
 174   1        { 
 175   2          recive_count  = 0;      
 176   2          while(!RI)
 177   2          {
 178   3            recive_count++;
C51 COMPILER V9.56.0.0   OPERATE_CARD                                                      08/08/2018 14:56:20 PAGE 4   

 179   3            if(recive_count>=2000) 
 180   3            {
 181   4              REN=0;
 182   4              return state;//超时退出
 183   4            }
 184   3          }
 185   2          da[i] = SBUF;
 186   2          RI  = 0;    
 187   2          i++;
 188   2          
 189   2        }
 190   1        if((verrify(da) == 1)&&(da[3] == 0x22))//校验接收数据
 191   1        {
 192   2            state = 1;//置位成功状态
 193   2        }
 194   1        REN = 0;  
 195   1        return state;
 196   1      }
 197          
 198          
 199          
 200          /********************************/
 201          /*name:read_card_1block         */
 202          /*discription:读出1块数据       */
 203          /*var in:读出16字节 传入21字节  */
 204          /*result out:                   */
 205          /********************************/
 206          bit read_card_1block(unsigned char block,unsigned char *out)
 207          {
 208   1        unsigned char i = 0;
 209   1        unsigned int recive_count1 = 0;
 210   1        unsigned char seek_data[9];
 211   1        bit state = 0 ;
 212   1        /*寻卡*/
 213   1        if(seek_card(seek_data) ==  0)
 214   1        {
 215   2          return state;//无卡退出
 216   2        }
 217   1        /*
 218   1        填充数据到发送区
 219   1        */
 220   1        out[0]  = 0xaa;
 221   1        out[1]  = 0x55;
 222   1        out[2]  = 0x06;
 223   1        out[3]  = 0x21;
 224   1        out[4]  = 0x02;
 225   1        out[5]  = block;
 226   1        out[6]  = 0x80;
 227   1        out[7]  = 0x00; 
 228   1        make_verr(out);//生成校验
 229   1        
 230   1        /*发送*/
 231   1        i = 0;
 232   1        while(i < 9)
 233   1        {
 234   2          TI = 0;
 235   2          SBUF = out[i];
 236   2          i++;
 237   2          while(!TI); 
 238   2        } 
 239   1        /*
 240   1        接收返回状态
C51 COMPILER V9.56.0.0   OPERATE_CARD                                                      08/08/2018 14:56:20 PAGE 5   

 241   1        */
 242   1        RI = 0;
 243   1        i = 0;
 244   1        REN = 1;
 245   1        while(i < 21)//接收数据最多接收21个字节
 246   1        { 
 247   2          recive_count1 = 0;      
 248   2          while(!RI)
 249   2          {
 250   3            recive_count1++;
 251   3            if(recive_count1>=2000)
 252   3            {
 253   4              REN=0;
 254   4              return state;//超时退出
 255   4            }
 256   3          }
 257   2          out[i] = SBUF;
 258   2          RI  = 0;    
 259   2          i++;
 260   2          
 261   2        }   
 262   1        
 263   1        if((verrify(out) == 1)&&(out[3] == 0x21))//校验接收数据
 264   1        {
 265   2            state = 1;//置位成功状态
 266   2        } 
 267   1        
 268   1        REN = 0;
 269   1        out[0]  = seek_data[4];
 270   1        out[1]  = seek_data[5];
 271   1        out[2]  = seek_data[6];
 272   1        out[3]  = seek_data[7];
 273   1        return state;
 274   1      }
 275          
 276          
 277          
 278          /********************************************/
 279          /*name: read_card                           */
 280          /*discription:读某一块数据                  */
 281          /*var in: sector 扇区号                     */
 282          /*result out: out 读出数据48字节传入53字节  */
 283          /*result out: state 状态                    */
 284          /********************************************/
 285          bit read_card(unsigned char sector, unsigned char *out)
 286          {
 287   1        unsigned char i = 0;
 288   1        unsigned int recive_count1 = 0;
 289   1        unsigned char seek_data[9];
 290   1        bit state = 0 ;
 291   1        /*寻卡*/
 292   1        if(seek_card(seek_data) ==  0)
 293   1        {
 294   2          return state;//无卡退出
 295   2        }
 296   1        
 297   1        /*
 298   1        填充数据到发送区
 299   1        */
 300   1        out[0]  = 0xaa;
 301   1        out[1]  = 0x55;
 302   1        out[2]  = 0x06;
C51 COMPILER V9.56.0.0   OPERATE_CARD                                                      08/08/2018 14:56:20 PAGE 6   

 303   1        out[3]  = 0x21;
 304   1        out[4]  = 0x02;
 305   1        out[5]  = sector*4+2;
 306   1        out[6]  = 0x80;
 307   1        out[7]  = 0x00; 
 308   1        make_verr(out);//生成校验
 309   1        
 310   1        /*发送*/
 311   1        i = 0;
 312   1        while(i < 9)
 313   1        {
 314   2          TI = 0;
 315   2          SBUF = out[i];
 316   2          i++;
 317   2          while(!TI); 
 318   2        } 
 319   1        /*
 320   1        接收返回状态
 321   1        */
 322   1        RI = 0;
 323   1        i = 0;
 324   1        REN = 1;
 325   1        while(i < 21)//接收数据最多接收21个字节
 326   1        { 
 327   2          recive_count1 = 0;      
 328   2          while(!RI)
 329   2          {
 330   3            recive_count1++;
 331   3            if(recive_count1>=2000)
 332   3            {
 333   4              REN=0;
 334   4              return state;//超时退出
 335   4            }
 336   3          }
 337   2          out[i] = SBUF;
 338   2          RI  = 0;    
 339   2          i++;
 340   2          
 341   2        }
 342   1        if((verrify(out) != 1)  ||  (out[3] != 0x21))//校验接收数据
 343   1        {
 344   2          state = 0;
 345   2          return state;
 346   2        }
 347   1        /*映射到最后16字节*/
 348   1        i = 0;
 349   1        while(i < 16)
 350   1        {
 351   2          out[37 + i] = out[4 + i];
 352   2          i++;
 353   2        }
 354   1        
 355   1        /*
 356   1        填充数据到发送区
 357   1        */
 358   1        out[0]  = 0xaa;
 359   1        out[1]  = 0x55;
 360   1        out[2]  = 0x06;
 361   1        out[3]  = 0x21;
 362   1        out[4]  = 0x02;
 363   1        out[5]  = sector*4+1;
 364   1        out[6]  = 0x80;
C51 COMPILER V9.56.0.0   OPERATE_CARD                                                      08/08/2018 14:56:20 PAGE 7   

 365   1        out[7]  = 0x00; 
 366   1        make_verr(out);//生成校验
 367   1        
 368   1        /*发送*/
 369   1        i = 0;
 370   1        while(i < 9)
 371   1        {
 372   2          TI = 0;
 373   2          SBUF = out[i];
 374   2          i++;
 375   2          while(!TI); 
 376   2        } 
 377   1        /*
 378   1        接收返回状态
 379   1        */
 380   1        RI = 0;
 381   1        i = 0;
 382   1        REN = 1;
 383   1        while(i < 21)//接收数据最多接收21个字节
 384   1        { 
 385   2          recive_count1 = 0;      
 386   2          while(!RI)
 387   2          {
 388   3            recive_count1++;
 389   3            if(recive_count1>=2000)
 390   3            {
 391   4              REN=0;
 392   4              return state;//超时退出
 393   4            }
 394   3          }
 395   2          out[i] = SBUF;
 396   2          RI  = 0;    
 397   2          i++;
 398   2          
 399   2        }
 400   1      
 401   1        if((verrify(out) != 1)  ||  (out[3] != 0x21))//校验接收数据
 402   1        {
 403   2          state = 0;
 404   2          return state;
 405   2        }
 406   1        /*映射到中间16字节*/
 407   1        i = 0;
 408   1        while(i < 16)
 409   1        {
 410   2          out[21 + i] = out[4 + i];
 411   2          i++;
 412   2        }
 413   1        
 414   1        /*
 415   1        填充数据到发送区
 416   1        */
 417   1        out[0]  = 0xaa;
 418   1        out[1]  = 0x55;
 419   1        out[2]  = 0x06;
 420   1        out[3]  = 0x21;
 421   1        out[4]  = 0x02;
 422   1        out[5]  = sector*4+0;
 423   1        out[6]  = 0x80;
 424   1        out[7]  = 0x00; 
 425   1        make_verr(out);//生成校验
 426   1        
C51 COMPILER V9.56.0.0   OPERATE_CARD                                                      08/08/2018 14:56:20 PAGE 8   

 427   1        /*发送*/
 428   1        i = 0;
 429   1        while(i < 9)
 430   1        {
 431   2          TI = 0;
 432   2          SBUF = out[i];
 433   2          i++;
 434   2          while(!TI); 
 435   2        } 
 436   1        /*
 437   1        接收返回状态
 438   1        */
 439   1        RI = 0;
 440   1        i = 0;
 441   1        REN = 1;
 442   1        while(i < 21)//接收数据最多接收21个字节
 443   1        { 
 444   2          recive_count1 = 0;      
 445   2          while(!RI)
 446   2          {
 447   3            recive_count1++;
 448   3            if(recive_count1>=2000)
 449   3            {
 450   4              REN=0;
 451   4              return state;//超时退出
 452   4            }
 453   3          }
 454   2          out[i] = SBUF;
 455   2          RI  = 0;    
 456   2          i++;
 457   2          
 458   2        }   
 459   1        
 460   1        if((verrify(out) == 1)&&(out[3] == 0x21))//校验接收数据
 461   1        {
 462   2            state = 1;//置位成功状态
 463   2        } 
 464   1        
 465   1        REN = 0;
 466   1        out[0]  = seek_data[4];
 467   1        out[1]  = seek_data[5];
 468   1        out[2]  = seek_data[6];
 469   1        out[3]  = seek_data[7];
 470   1        i = 0;
 471   1        while(i < 32)
 472   1        {
 473   2          out[20 + i] =out[21 + i]; 
 474   2          i++;
 475   2        } 
 476   1      
 477   1        return state; 
 478   1      }
 479          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1624    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      62
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.56.0.0   OPERATE_CARD                                                      08/08/2018 14:56:20 PAGE 9   

   BIT SIZE         =   ----       4
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
